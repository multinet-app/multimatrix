{"version":3,"sources":["webpack://ProvenanceLibrary/webpack/universalModuleDefinition","webpack://ProvenanceLibrary/webpack/bootstrap","webpack://ProvenanceLibrary/./src/utils/utils.ts","webpack://ProvenanceLibrary/./src/provenance-core/ActionsEnum.ts","webpack://ProvenanceLibrary/./src/provenance-core/NodeInterfaces.ts","webpack://ProvenanceLibrary/./node_modules/symbol-observable/es/index.js","webpack://ProvenanceLibrary/./src/provenance-core/Provenance.ts","webpack://ProvenanceLibrary/./src/provenance-core/ProvenanceGraph.ts","webpack://ProvenanceLibrary/./src/provenance-core/NodeActions/Reducer.ts","webpack://ProvenanceLibrary/./src/provenance-core/Store.ts","webpack://ProvenanceLibrary/./node_modules/redux/es/redux.js","webpack://ProvenanceLibrary/./src/provenance-core/ApplyActionFunction.ts","webpack://ProvenanceLibrary/./src/provenance-core/CurrentActions/ActionCreators.ts","webpack://ProvenanceLibrary/./src/provenance-core/GotoNodeActions.ts","webpack://ProvenanceLibrary/./node_modules/symbol-observable/es/ponyfill.js","webpack://ProvenanceLibrary/./src/index.ts","webpack://ProvenanceLibrary/./src/provenance-core/NonReduxHelpers/EventsManager.ts","webpack://ProvenanceLibrary/./src/provenance-core/NonReduxHelpers/Global.ts","webpack://ProvenanceLibrary/(webpack)/buildin/global.js","webpack://ProvenanceLibrary/(webpack)/buildin/harmony-module.js","webpack://ProvenanceLibrary/./src/provenance-core/Reducers.ts","webpack://ProvenanceLibrary/./src/provenance-core/CurrentActions/Reducer.ts","webpack://ProvenanceLibrary/./src/provenance-core/RootActions/Reducer.ts","webpack://ProvenanceLibrary/./src/provenance-core/NodeActions/ActionCreators.ts","webpack://ProvenanceLibrary/./src/provenance-core/ProvenanceRedux.ts","webpack://ProvenanceLibrary/./src/provenance-core/ActionHelpers/RecordableReduxActions.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","generateUUID","Date","getTime","performance","now","replace","Math","random","floor","toString","generateTimeStamp","deepCopy","obj","JSON","parse","stringify","deepCopyReadonly","NodeActionsEnum","CurrentActionsEnum","isStateNode","node","global","_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__","self","result","__webpack_exports__","ProvenanceGraph_1","EventsManager_1","NodeInterfaces_1","Store_1","utils_1","ApplyActionFunction_1","GotoNodeActions_1","initProvenance","initState","graph","configureStore","createNewGraph","EM","initEventManager","getState","applyAction","actionObject","oldState","current","state","applyRecordableAction","newState","callEvents","addObserver","propPath","func","addGlobalObserver","goToNode","id","prevState","toNode","goBackOneStep","parent","goBackNSteps","reset","Reducer_1","createNewGraphRedux","application","nodes","label","metadata","createdOn","artifacts","children","addNode","ActionsEnum_1","Error","newNodes","updateNodes","_nodes","nodeReducer","action","type","ADD_NODE","UPDATE_NEWLY_ADDED_NODE","redux_1","Reducers_1","createStore","Reducers","combineReducers","bindActionCreators","applyMiddleware","compose","ActionTypes","symbol_observable__WEBPACK_IMPORTED_MODULE_0__","randomString","substring","split","join","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","getPrototypeOf","reducer","preloadedState","enhancer","_ref2","arguments","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","listeners","length","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","this","getUndefinedStateErrorMessage","actionType","String","reducers","reducerKeys","keys","finalReducers","shapeAssertionError","finalReducerKeys","forEach","assertReducerShape","e","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","actionCreators","boundActionCreators","_defineProperty","configurable","writable","_len","funcs","Array","arg","reduce","a","b","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","target","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","_objectSpread","ActionCreators_1","ActionCreators_2","applyRecordableActionRedux","skipFirstDoFunctionCall","newNode","actionResult","currentNode","createAddNodeAction","createAddChildToCurrentAction","createUpdateNewlyAddedNodeAction","createChangeCurrentAction","_a","args","thisArg","createNewStateNode","childNode","ADD_CHILD_TO_CURRENT","newCurrent","CHANGE_CURRENT","toNodeRedux","targetNode","findPathToTargetNode","track","comingFromNode","unshift","nodesToCheck","nodesToCheck_1","err","symbolObservablePonyfill","observable","Provenance_1","Provenance_2","ProvenanceRedux_1","initProvenanceRedux","RecordableReduxActions_1","recordableReduxActionCreator","initialize","Global_1","eventRegistry","default","f","path","paths","prevValue","prev","curr","newValue","g","Function","originalModule","webpackPolyfill","Reducer_2","Reducer_3","rootReducer","addChildToCurrent","child","assign","applicationStore","resetStore"],"mappings":"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","file":"provenance.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ProvenanceLibrary\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ProvenanceLibrary\"] = factory();\n\telse\n\t\troot[\"ProvenanceLibrary\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","export function generateUUID(): string {\n  let d = new Date().getTime();\n\n  if (\n    typeof performance !== \"undefined\" &&\n    typeof performance.now === \"function\"\n  ) {\n    d += performance.now();\n  }\n\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    let r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\nexport function generateTimeStamp(): number {\n  return new Date().getTime();\n}\n\nexport function deepCopy<T>(obj: T): T {\n  if (!obj) return;\n  return JSON.parse(JSON.stringify(obj)) as T;\n}\n\nexport function deepCopyReadonly<T>(obj: T): Readonly<T> {\n  return JSON.parse(JSON.stringify(obj)) as Readonly<T>;\n}\n","export enum NodeActionsEnum {\n  ADD_NODE = \"ADD_NODE\",\n  UPDATE_NEWLY_ADDED_NODE = \"UPDATE_NEWLY_ADDED_NODE\"\n}\n\nexport enum CurrentActionsEnum {\n  ADD_CHILD_TO_CURRENT = \"ADD_CHILD_TO_CURRENT\",\n  CHANGE_CURRENT = \"CHANGE_CURRENT\"\n}\n","import { RecordableReduxAction } from \"./ActionHelpers/RecordableReduxActions\";\n\nexport type NodeID = string;\n\nexport interface NodeMetadata {\n  createdOn: number;\n  [key: string]: any;\n}\n\nexport interface Artifacts {\n  [key: string]: any;\n}\n\nexport interface BaseNode<T> {\n  state?: T;\n}\n\nexport interface RootNode<T> extends BaseNode<T> {\n  id: NodeID;\n  label: string;\n  metadata: NodeMetadata;\n  children: NodeID[];\n  artifacts: Artifacts;\n  state?: T;\n}\n\nexport interface StateNode<T> extends RootNode<T> {\n  parent: NodeID;\n  action: RecordableReduxAction;\n  actionResult: unknown;\n}\n\nexport type ProvenanceNode<T> = RootNode<T> | StateNode<T>;\n\nexport type Nodes<T> = { [key: string]: ProvenanceNode<T> };\n\nexport type CurrentNode<T> = ProvenanceNode<T>;\n\nexport function isStateNode<T>(node: ProvenanceNode<T>): node is StateNode<T> {\n  return \"parent\" in node;\n}\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import { ProvenanceGraph, createNewGraph } from \"./ProvenanceGraph\";\nimport { RecordableAction } from \"./ActionHelpers/RecordableAction\";\nimport {\n  SubscriberFunction,\n  initEventManager\n} from \"./NonReduxHelpers/EventsManager\";\nimport { NodeID, isStateNode } from \"./NodeInterfaces\";\nimport { configureStore } from \"./Store\";\nimport { deepCopy } from \"../utils/utils\";\nimport { applyRecordableAction } from \"./ApplyActionFunction\";\nimport { toNode } from \"./GotoNodeActions\";\n\nexport interface Provenance<T> {\n  graph: () => ProvenanceGraph<T>;\n  applyAction: (actionObject: RecordableAction<T>) => void;\n  addObserver: (propPath: string, func: SubscriberFunction<T>) => void;\n  addGlobalObserver: (func: SubscriberFunction<T>) => void;\n  goToNode: (id: NodeID) => void;\n  goBackOneStep: () => void;\n  goBackNSteps: (n: number) => void;\n  reset: () => void;\n}\n\nexport function initProvenance<T>(initState: T): Provenance<T> {\n  const graph = configureStore(createNewGraph<T>(initState));\n\n  const EM = initEventManager<T>();\n\n  return {\n    graph: () => deepCopy(graph.getState()),\n    applyAction: (actionObject: RecordableAction<T>) => {\n      const oldState = graph.getState().current.state;\n      applyRecordableAction(graph, actionObject);\n      const newState = graph.getState().current.state;\n      EM.callEvents(oldState, newState);\n    },\n    addObserver: (propPath: string, func: SubscriberFunction<T>) => {\n      EM.addObserver(propPath, func);\n    },\n    addGlobalObserver: (func: SubscriberFunction<T>) => {\n      EM.addGlobalObserver(func);\n    },\n    goToNode: (id: NodeID) => {\n      const prevState = graph.getState().current.state;\n      const newState = toNode(graph, id);\n      EM.callEvents(prevState, newState);\n    },\n    goBackOneStep: () => {\n      const current = graph.getState().current;\n      const prevState = current.state;\n      let newState = current.state;\n      if (isStateNode(current)) newState = toNode(graph, current.parent);\n\n      EM.callEvents(prevState, newState);\n    },\n    goBackNSteps: (n: number) => {\n      let current = graph.getState().current;\n      const prevState = current.state;\n      let newState = current.state;\n      while (n > 0) {\n        current = graph.getState().current;\n        if (isStateNode(current)) newState = toNode(graph, current.parent);\n        else break;\n        --n;\n      }\n\n      EM.callEvents(prevState, newState);\n    },\n    reset: () => {\n      const prevState = graph.getState().current.state;\n      const newState = toNode(graph, graph.getState().root.id);\n      EM.callEvents(prevState, newState);\n    }\n  };\n}\n","import { generateTimeStamp, generateUUID } from \"../utils/utils\";\nimport { RootNode, CurrentNode, Nodes } from \"./NodeInterfaces\";\nimport { addNode } from \"./NodeActions/Reducer\";\nimport { Store } from \"redux\";\n\nexport interface ProvenanceGraph<T> {\n  nodes: Nodes<T>;\n  current: CurrentNode<T>;\n  root: RootNode<T>;\n}\n\nexport function createNewGraphRedux<T>(\n  application: Store<T>\n): ProvenanceGraph<T> {\n  let root: RootNode<T> = undefined;\n\n  root = {\n    id: generateUUID(),\n    label: \"Root\",\n    metadata: {\n      createdOn: generateTimeStamp()\n    },\n    artifacts: {},\n    children: [],\n    state: application.getState()\n  };\n\n  const graph: ProvenanceGraph<T> = {\n    nodes: {},\n    root: root,\n    current: root\n  };\n\n  graph.nodes = addNode(graph.nodes, root);\n  return graph;\n}\n\nexport function createNewGraph<T>(initState: T): ProvenanceGraph<T> {\n  let root: RootNode<T> = {\n    id: generateUUID(),\n    label: \"Root\",\n    metadata: {\n      createdOn: generateTimeStamp()\n    },\n    artifacts: {},\n    children: [],\n    state: initState\n  };\n\n  const graph: ProvenanceGraph<T> = {\n    nodes: {},\n    root: root,\n    current: root\n  };\n\n  graph.nodes = addNode(graph.nodes, root);\n  return graph;\n}\n","import { NodeAction } from \"./Actions\";\nimport { NodeActionsEnum } from \"../ActionsEnum\";\nimport { deepCopy } from \"../../utils/utils\";\nimport { ProvenanceNode, Nodes } from \"../NodeInterfaces\";\n\nexport function nodeReducer<T>(\n  nodes: Nodes<T> = {},\n  action: NodeAction<T>\n): Nodes<T> {\n  switch (action.type) {\n    case NodeActionsEnum.ADD_NODE:\n      return addNode(nodes, action.node);\n    case NodeActionsEnum.UPDATE_NEWLY_ADDED_NODE:\n      return updateNodes(nodes, action.node);\n    default:\n      return nodes;\n  }\n}\n\nexport function addNode<T>(nodes: Nodes<T>, node: ProvenanceNode<T>): Nodes<T> {\n  if (nodes[node.id]) throw new Error(\"Node already exists\");\n  let newNodes = deepCopy(nodes);\n  newNodes[node.id] = node;\n  return newNodes;\n}\n\nexport function updateNodes<T>(\n  nodes: Nodes<T>,\n  node: ProvenanceNode<T>\n): Nodes<T> {\n  const _nodes = deepCopy(nodes);\n  _nodes[node.id] = node;\n  return _nodes;\n}\n","import { ProvenanceGraph } from \"./ProvenanceGraph\";\nimport { createStore, Store } from \"redux\";\nimport { Reducers } from \"./Reducers\";\n\nexport function configureStore<T>(\n  state: ProvenanceGraph<T>\n): Store<ProvenanceGraph<T>> {\n  return createStore<any, null, null, null>(Reducers, state as any);\n}\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers);\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(\"Dispatching while constructing your middleware is not allowed. \" + \"Other middleware would not be applied to this dispatch.\");\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };\n","import { Store, AnyAction } from \"redux\";\nimport { ProvenanceGraph } from \"./ProvenanceGraph\";\nimport { NodeID, StateNode } from \"./NodeInterfaces\";\nimport { generateUUID, generateTimeStamp } from \"../utils/utils\";\nimport {\n  createAddNodeAction,\n  createUpdateNewlyAddedNodeAction\n} from \"./NodeActions/ActionCreators\";\nimport {\n  createAddChildToCurrentAction,\n  createChangeCurrentAction\n} from \"./CurrentActions/ActionCreators\";\nimport { RecordableAction } from \"./ActionHelpers/RecordableAction\";\nimport { RecordableReduxAction } from \"./ActionHelpers/RecordableReduxActions\";\n\nexport function applyRecordableActionRedux<T>(\n  graph: Store<ProvenanceGraph<T>, AnyAction>,\n  application: Store<T>,\n  action: RecordableReduxAction,\n  skipFirstDoFunctionCall: boolean = false\n) {\n  const createNewStateNode = (\n    parent: NodeID,\n    actionResult: unknown\n  ): StateNode<T> => ({\n    id: generateUUID(),\n    label: action.type,\n\n    metadata: {\n      createdOn: generateTimeStamp()\n    },\n    action: action,\n    actionResult: actionResult,\n    parent: parent,\n    children: [],\n    artifacts: [],\n    state: application.getState()\n  });\n\n  let newNode: StateNode<T>;\n\n  const currentNode = graph.getState().current;\n  if (!skipFirstDoFunctionCall) application.dispatch(action);\n  newNode = createNewStateNode(currentNode.id, null);\n\n  // * Add to nodes list\n  graph.dispatch(createAddNodeAction(newNode));\n  // * Add as child to current nodeididid\n  graph.dispatch(createAddChildToCurrentAction(newNode.id));\n  // * Update the node in nodes list\n  graph.dispatch(createUpdateNewlyAddedNodeAction(graph.getState().current));\n  // * Change Current node\n  graph.dispatch(createChangeCurrentAction(newNode));\n}\n\nexport function applyRecordableAction<T>(\n  graph: Store<ProvenanceGraph<T>, AnyAction>,\n  { label, action, args, thisArg }: RecordableAction<T>,\n  skipFirstDoFunctionCall: boolean = false\n) {\n  const createNewStateNode = (\n    parent: NodeID,\n    actionResult: unknown,\n    newState: T\n  ): StateNode<T> => ({\n    id: generateUUID(),\n    label: label,\n\n    metadata: {\n      createdOn: generateTimeStamp()\n    },\n    action: action as any,\n    actionResult: actionResult,\n    parent: parent,\n    children: [],\n    artifacts: [],\n    state: newState\n  });\n\n  const currentNode = graph.getState().current;\n  let newState: T = null;\n\n  if (!skipFirstDoFunctionCall)\n    if (thisArg) newState = action.apply(thisArg, args);\n    else newState = action.apply(null, args);\n\n  const newNode = createNewStateNode(currentNode.id, null, newState);\n  // * Add to nodes list\n  graph.dispatch(createAddNodeAction(newNode));\n  // * Add as child to current nodeididid\n  graph.dispatch(createAddChildToCurrentAction(newNode.id));\n  // * Update the node in nodes list\n  graph.dispatch(createUpdateNewlyAddedNodeAction(graph.getState().current));\n  // * Change Current node\n  graph.dispatch(createChangeCurrentAction(newNode));\n}\n","import { NodeID, ProvenanceNode } from \"../NodeInterfaces\";\nimport { AddChildToCurrentAction, ChangeCurrentAction } from \"./Actions\";\nimport { CurrentActionsEnum } from \"../ActionsEnum\";\n\nexport function createAddChildToCurrentAction(\n  childNode: NodeID\n): AddChildToCurrentAction {\n  return {\n    type: CurrentActionsEnum.ADD_CHILD_TO_CURRENT,\n    childNode: childNode\n  };\n}\n\nexport function createChangeCurrentAction<T>(\n  newCurrent: ProvenanceNode<T>\n): ChangeCurrentAction<T> {\n  return {\n    type: CurrentActionsEnum.CHANGE_CURRENT,\n    newCurrent: newCurrent\n  };\n}\n","import { Store, AnyAction } from \"redux\";\nimport { ProvenanceGraph } from \"./ProvenanceGraph\";\nimport { NodeID, ProvenanceNode, isStateNode, Nodes } from \"./NodeInterfaces\";\nimport { createChangeCurrentAction } from \"./CurrentActions/ActionCreators\";\n\nexport function toNodeRedux<T>(\n  graph: Store<ProvenanceGraph<T>, AnyAction>,\n  id: NodeID\n) {\n  try {\n    const currentNode = graph.getState().current;\n    const targetNode = graph.getState().nodes[id];\n    if (currentNode === targetNode) return;\n\n    const trackToTarget: ProvenanceNode<T>[] = [];\n\n    const success = findPathToTargetNode(\n      graph.getState().nodes,\n      currentNode,\n      targetNode,\n      trackToTarget\n    );\n\n    if (!success) {\n      throw new Error(\"No Path found!\");\n    }\n\n    // * Change current\n    graph.dispatch(createChangeCurrentAction(targetNode));\n  } catch (err) {\n    throw new Error(err);\n  }\n}\n\nexport function toNode<T>(graph: Store<ProvenanceGraph<T>>, id: NodeID): T {\n  try {\n    const currentNode = graph.getState().current;\n    const targetNode = graph.getState().nodes[id];\n\n    if (currentNode === targetNode) return currentNode.state;\n\n    graph.dispatch(createChangeCurrentAction(targetNode));\n    return targetNode.state;\n  } catch (err) {\n    throw new Error(err);\n  }\n}\n\nfunction findPathToTargetNode<T>(\n  nodes: Nodes<T>,\n  currentNode: ProvenanceNode<T>,\n  targetNode: ProvenanceNode<T>,\n  track: ProvenanceNode<T>[],\n  comingFromNode: ProvenanceNode<T> = currentNode\n): boolean {\n  if (currentNode && currentNode === targetNode) {\n    track.unshift(currentNode);\n    return true;\n  } else if (currentNode) {\n    const nodesToCheck: ProvenanceNode<T>[] = currentNode.children.map(\n      c => nodes[c]\n    );\n\n    if (isStateNode(currentNode)) {\n      nodesToCheck.push(nodes[currentNode.parent]);\n    }\n\n    for (let node of nodesToCheck) {\n      if (node === comingFromNode) continue;\n      if (findPathToTargetNode(nodes, node, targetNode, track, currentNode)) {\n        track.unshift(currentNode);\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import { initProvenance } from \"./provenance-core/Provenance\";\n\nexport { initProvenance } from \"./provenance-core/Provenance\";\n\nexport { initProvenanceRedux } from \"./provenance-core/ProvenanceRedux\";\n\nexport { Provenance, ProvenanceRedux } from \"./provenance-core/ProvenanceCore\";\n\nexport {\n  RecordableReduxAction,\n  recordableReduxActionCreator\n} from \"./provenance-core/ActionHelpers/RecordableReduxActions\";\n\nexport {\n  RecordableAction\n} from \"./provenance-core/ActionHelpers/RecordableAction\";\n\nexport function initialize(state: any) {\n  return initProvenance(state);\n}\n","import Global from \"./Global\";\n\nexport type SubscriberFunction<T> = (state?: T) => void;\n\nexport interface EventManager<T> {\n  callEvents: (prevState: T, newState: T) => void;\n  addGlobalObserver: (func: SubscriberFunction<T>) => void;\n  addObserver: (propPath: string, func: SubscriberFunction<T>) => void;\n}\n\nexport function initEventManager<T>(): EventManager<T> {\n  const eventRegistry: { [key: string]: SubscriberFunction<T>[] } = {};\n  return {\n    addGlobalObserver: (func: SubscriberFunction<T>) => {\n      if (!eventRegistry[Global]) eventRegistry[Global] = [];\n      eventRegistry[Global].push(func);\n    },\n    addObserver: (propPath: string, func: SubscriberFunction<T>) => {\n      if (!eventRegistry[propPath]) eventRegistry[propPath] = [];\n      eventRegistry[propPath].push(func);\n    },\n    callEvents: (prevState: T, newState: T) => {\n      if (eventRegistry[Global]) {\n        if (prevState !== newState)\n          eventRegistry[Global].forEach(f => f(newState));\n        return;\n      }\n\n      Object.keys(eventRegistry).forEach(path => {\n        const paths = path.split(\".\");\n        const prevValue = paths.reduce((prev, curr) => {\n          return prev && prev[curr];\n        }, prevState);\n        const newValue = paths.reduce((prev, curr) => {\n          return prev && prev[curr];\n        }, newState);\n\n        if (!(prevValue && newValue))\n          throw new Error(`Path ${path} is illegal.`);\n\n        if (JSON.stringify(prevValue) !== JSON.stringify(newValue)) {\n          eventRegistry[path].forEach(f => f(newState));\n        }\n      });\n    }\n  };\n}\n","const Global = \"GLOBAL\";\n\nexport default Global;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { combineReducers } from \"redux\";\nimport { nodeReducer } from \"./NodeActions/Reducer\";\nimport { currentReducer } from \"./CurrentActions/Reducer\";\nimport { rootReducer } from \"./RootActions/Reducer\";\n\nexport const Reducers = combineReducers({\n  nodes: nodeReducer,\n  current: currentReducer,\n  root: rootReducer\n});\n","import { CurrentActionsEnum } from \"../ActionsEnum\";\nimport { ProvenanceNode, NodeID, CurrentNode } from \"../NodeInterfaces\";\nimport { CurrentAction } from \"./Actions\";\n\nexport function currentReducer<T>(\n  current: CurrentNode<T> = {} as any,\n  action: CurrentAction<T>\n) {\n  switch (action.type) {\n    case CurrentActionsEnum.ADD_CHILD_TO_CURRENT:\n      return addChildToCurrent(current, action.childNode);\n      break;\n    case CurrentActionsEnum.CHANGE_CURRENT:\n      return action.newCurrent;\n    default:\n      return current;\n  }\n}\n\nexport function addChildToCurrent<T>(\n  current: ProvenanceNode<T>,\n  child: NodeID\n) {\n  const curr = Object.assign({}, current);\n  curr.children.push(child);\n  return curr;\n}\n","import { RootNode } from \"../NodeInterfaces\";\nimport { AnyAction } from \"redux\";\n\nexport function rootReducer<T>(\n  root: RootNode<T> = {} as any,\n  action: AnyAction\n) {\n  return root;\n}\n","import { ProvenanceNode } from \"../NodeInterfaces\";\nimport { AddNodeAction, UpdateNewlyAddedNodeAction } from \"./Actions\";\nimport { NodeActionsEnum } from \"../ActionsEnum\";\n\nexport function createAddNodeAction<T>(\n  node: ProvenanceNode<T>\n): AddNodeAction<T> {\n  return {\n    type: NodeActionsEnum.ADD_NODE,\n    node: node\n  };\n}\n\nexport function createUpdateNewlyAddedNodeAction<T>(\n  node: ProvenanceNode<T>\n): UpdateNewlyAddedNodeAction<T> {\n  return {\n    type: NodeActionsEnum.UPDATE_NEWLY_ADDED_NODE,\n    node: node\n  };\n}\n","import { Store } from \"redux\";\nimport { configureStore } from \"./Store\";\nimport { createNewGraphRedux, ProvenanceGraph } from \"./ProvenanceGraph\";\nimport { deepCopy } from \"../utils/utils\";\nimport { RecordableReduxAction } from \"./ActionHelpers/RecordableReduxActions\";\nimport { applyRecordableActionRedux } from \"./ApplyActionFunction\";\nimport { NodeID, isStateNode } from \"./NodeInterfaces\";\nimport { toNodeRedux } from \"./GotoNodeActions\";\n\nexport interface ProvenanceRedux<T> {\n  graph: () => ProvenanceGraph<T>;\n  apply: (\n    action: RecordableReduxAction,\n    skipFirstDoFunctionCall?: boolean\n  ) => void;\n  goToNode: (id: NodeID) => void;\n  goBackOneStep: () => void;\n  goBackNSteps: (n: number) => void;\n  reset: () => void;\n}\n\nexport function initProvenanceRedux<T>(\n  applicationStore: Store<T>,\n  resetStore: (newState: T) => void\n): ProvenanceRedux<T> {\n  const graph = configureStore<T>(createNewGraphRedux(applicationStore));\n\n  return {\n    graph: () => deepCopy(graph.getState()),\n    apply: (\n      action: RecordableReduxAction,\n      skipFirstDoFunctionCall: boolean = false\n    ) => {\n      applyRecordableActionRedux(\n        graph,\n        applicationStore,\n        action,\n        skipFirstDoFunctionCall\n      );\n    },\n    goToNode: (id: NodeID) => {\n      toNodeRedux(graph, id);\n      resetStore(graph.getState().current.state);\n    },\n    goBackOneStep: () => {\n      const current = graph.getState().current;\n      if (isStateNode(current)) {\n        toNodeRedux(graph, current.parent);\n        resetStore(graph.getState().current.state);\n      }\n    },\n    goBackNSteps: (n: number) => {\n      let current = graph.getState().current;\n      while (n > 0) {\n        current = graph.getState().current;\n        if (isStateNode(current)) toNodeRedux(graph, current.parent);\n        else break;\n        --n;\n      }\n      resetStore(graph.getState().current.state);\n    },\n    reset: () => {\n      toNodeRedux(graph, graph.getState().root.id);\n      resetStore(graph.getState().current.state);\n    }\n  };\n}\n","import { Action } from \"redux\";\n\nexport interface RecordableReduxAction extends Action {\n  readonly type: string;\n  label: string;\n  args: unknown;\n}\n\nexport function recordableReduxActionCreator(\n  label: string,\n  type: string,\n  args: unknown\n): RecordableReduxAction {\n  return {\n    type,\n    label,\n    args\n  };\n}\n"],"sourceRoot":""}